version: '3.7'

services:
  db:
    image: postgres:17
    shm_size: "2g"
    deploy:
      resources:
        reservations:
          memory: 4G
        limits:
          memory: 6G
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo18@2024
      POSTGRES_DB: postgres
    restart: always
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odoo -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  odoo18:
    image: odoo:18
    shm_size: "2g"
    deploy:
      resources:
        reservations:
          memory: 2G 
        limits:
          memory: 4G
    depends_on:
      pgbouncer:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "10018:8069"
      - "20018:8072"
    tty: true
    command: odoo
    environment:
      HOST: pgbouncer
      USER: odoo
      PASSWORD: odoo18@2024
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./addons:/mnt/extra-addons
      - ./etc:/etc/odoo
    restart: always

  pgbouncer:
    image: edoburu/pgbouncer
    shm_size: "2g"
    deploy:
      resources:
        reservations:
          memory: 128M  
        limits:
          memory: 256M
    environment:
      DB_HOST: db
      DATABASES: "odoo=host=db port=5432 dbname=postgres user=odoo password=odoo18@2024"
      AUTH_FILE: "/etc/pgbouncer/userlist.txt"
      POOL_MODE: "session"
      MAX_CLIENT_CONN: "100"
      DEFAULT_POOL_SIZE: "30"
      LISTEN_PORT: "6432"
    volumes:
      - ./pgbouncer/userlist.txt:/etc/pgbouncer/userlist.txt
    ports:
      - "6432:6432"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "odoo", "-d", "postgres", "-h", "db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    shm_size: "2g"
    deploy:
      resources:
        reservations:
          memory: 512M 
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    restart: always
